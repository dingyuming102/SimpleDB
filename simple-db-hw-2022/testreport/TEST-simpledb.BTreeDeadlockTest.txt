Testsuite: simpledb.BTreeDeadlockTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 6.082 sec
------------- Standard Output ---------------
testReadWriteDeadlock constructing deadlock:
removing non-existing page
removing non-existing page
Transaction 3 Aborted!
removing non-existing page
removing non-existing page
Transaction 4 Aborted!
testReadWriteDeadlock resolved deadlock
------------- ---------------- ---------------
------------- Standard Error -----------------
simpledb.transaction.TransactionAbortedException
	at simpledb.transaction.LockManager.acquireLock(LockManager.java:61)
	at simpledb.storage.BufferPool.getPage(BufferPool.java:99)
	at simpledb.index.BTreeFile.getPage(BTreeFile.java:516)
	at simpledb.index.BTreeFile.getParentWithEmptySlots(BTreeFile.java:433)
	at simpledb.index.BTreeFile.splitLeafPage(BTreeFile.java:295)
	at simpledb.index.BTreeFile.insertTuple(BTreeFile.java:552)
	at simpledb.storage.BufferPool.insertTuple(BufferPool.java:214)
	at simpledb.index.BTreeUtility$BTreeWriter.run(BTreeUtility.java:535)
simpledb.transaction.TransactionAbortedException
	at simpledb.transaction.LockManager.acquireLock(LockManager.java:61)
	at simpledb.storage.BufferPool.getPage(BufferPool.java:99)
	at simpledb.index.BTreeFile.getPage(BTreeFile.java:516)
	at simpledb.index.BTreeFile.getRootPtrPage(BTreeFile.java:1090)
	at simpledb.index.BTreeFile.insertTuple(BTreeFile.java:539)
	at simpledb.storage.BufferPool.insertTuple(BufferPool.java:214)
	at simpledb.index.BTreeUtility$BTreeWriter.run(BTreeUtility.java:535)
------------- ---------------- ---------------

Testcase: testReadWriteDeadlock took 6.029 sec
